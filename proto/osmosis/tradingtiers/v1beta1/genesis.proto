syntax = "proto3";
package osmosis.tradingtiers.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "cosmos_proto/cosmos.proto";
import "google/protobuf/duration.proto";
import "cosmos/base/v1beta1/coin.proto";
import "osmosis/poolmanager/v1beta1/module_route.proto";
import "osmosis/poolmanager/v1beta1/tx.proto";

option go_package = "github.com/osmosis-labs/osmosis/v28/x/trading-tiers/types";

message Params {
  cosmos.base.v1beta1.Coin opt_in_fee = 1 [
    (gogoproto.moretags) = "yaml:\"opt_in_fee\"",
    (gogoproto.nullable) = false
  ];
  string stake_min_requirement = 2 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.moretags) = "yaml:\"stake_min_requirement\"",
    (gogoproto.nullable) = false
  ];
  uint64 rolling_window = 4
      [ (gogoproto.moretags) = "yaml:\"rolling_window\"" ];
  string min_trade_value_to_initialize_day_tracking = 5 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.moretags) =
        "yaml:\"min_trade_value_to_initialize_day_tracking\"",
    (gogoproto.nullable) = false
  ];
  FeeTiers fee_tiers = 6 [ (gogoproto.nullable) = false ];
  uint64 osmo_usd_pool_id = 7;
}

message GenesisState { Params params = 1 [ (gogoproto.nullable) = false ]; }

message FeeTiers {
  repeated FeeTier fee_tiers = 1 [ (gogoproto.nullable) = false ];
}

message FeeTier {
  uint64 tier_id = 1;
  // tier_min_stake_requirement is the minimum amount of stake required to be in
  // this tier
  string tier_min_stake_requirement = 2 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.moretags) = "yaml:\"tier_min_stake_requirement\"",
    (gogoproto.nullable) = false
  ];
  // tier_min_rolling_window_volume is the minimum amount of volume required to
  // be in this tier
  string tier_min_rolling_window_volume = 3 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.moretags) = "yaml:\"tier_min_rolling_window_volume\"",
    (gogoproto.nullable) = false
  ];
}
